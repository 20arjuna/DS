public class FancyCalc
{
  public pow(base, exponent)
  {
    if (exponent == 0)
    {
      return 1;
    }
    return base * this.pow(base, exponent - 1);
  }
  private square(num)
  {
    return num * num;
  }
  public fastPow(base, exponent)
  {
    if (exponent == 0)
    {
      return 1;
    }
    if (exponent %2 ==0)
    {
      return this.square(
                  this.fastPow(base, (exponent /2)));
    }
    return base * this.fastPow(base, exponent - 1);
  }
  public gcd(num1, num2)
  {
    if(num1 <0 || num2 <0)
    {
      return "positive nums only please";
    }
    if(this.isBigger(num1, num2))
    {
      big = num1;
      small = num2;
      }
      else if(this.isBigger(num2, num1))
      {
        big = num2;
        small = num1;
      }
      else
      {
        return num1;
      }
      if(small ==0)
      {
        return big;
      }
      return (this.gcd(small, big%small));
  }
  private isBigger(num1, num2)
  {
    if(num1 > num2)
    {
      return true;
    }
    return false;

  }
  public isPrime(num)
  {
    return this.helpPrime(num, 2);
  }
  private helpPrime(num, divisor)
  {
    if (divisor == num)
    {
      return true;
    }
    if(num%divisor == 0)
    {
      return false;
    }
    return this.helpPrime(num, divisor + 1);
  }
}
